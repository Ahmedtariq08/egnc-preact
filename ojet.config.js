const webpack = require('webpack');

//App modes for webpack configuration
const AppModes = { DEV: "development", PROD: "production", NONE: "none" }

// config() will read the .env file, parse the contents, assign it to process.env
require('dotenv').config();

let BASE_URL = '';
let APP_MODE = AppModes.DEV;
switch (process.env.MODE) {
  case 'local':
    BASE_URL = process.env.LOCAL_BASE
    break;
  case 'test':
    BASE_URL = process.env.TEST_BASE
    break;
  case 'dev':
    BASE_URL = process.env.DEV_BASE
    break;
  case 'prod':
    BASE_URL = process.env.PROD_BASE
    APP_MODE = AppModes.PROD;
    break;
  default:
    BASE_URL = process.env.TEST_BASE
    break;
}

module.exports = {
  /**
   * @param {object} options.context - ojet build context which contains useful fields like
   * buildType
   * @param {object} options.config - Default webpack config generated by ojet. You can
   * add to it, remove from it or update it using webpack-merge which was
   * installed alongside webpack. If desired, you can create your own config
   * and return it which will override the default config
   * @returns {object|undefined}
   */
  webpack: ({ context, config }) => {
    config.devServer = {
      port: process.env.PORT,
      historyApiFallback: true,
      hot: false,
      liveReload: true,
    };
    config.output = {
      publicPath: "/"
    }
    config.mode = APP_MODE;
    config.plugins.push(
      new webpack.DefinePlugin({
        // define variables to be used in the application                        
        'process.env.BASE_URL': JSON.stringify(BASE_URL),
        'process.env.SERVICES': JSON.stringify(process.env.SERVICES),
      }),
    );
    if (APP_MODE == AppModes.PROD || context.buildType === 'release') {
      // update config with release / production options
      config.performance = {
        hints: false,
        maxEntrypointSize: 512000,
        maxAssetSize: 512000
      };
    } else {
      // update config with development options
      config.devtool = "eval-source-map";
      config.optimization = {
        minimize: false,
      };
    }
    return config;
  }
};
